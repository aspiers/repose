<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
        <!-- product name is likely to change; parameterize full name, abbreviated name, expanded name -->
        <!ENTITY PRODNAME "Repose">
        <!ENTITY PRODABBREV "Repose">
        <!ENTITY PRODEXPAND "REstful PrOxy Service Engine">
        <!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash  "&#x2013;">
        <!ENTITY mdash  "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

        <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Check_mark_23x20_02.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>

        <!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Arrow_east.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>
        ]>


<section xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xmlns="http://docbook.org/ns/docbook"
         xml:id="Repose-Compression-Chapter">

    <title>Compression Filter</title>


    <section xml:id="Compression-Introduction">
        <title>Introduction</title>
        <para>Compression is the process of reducing data size for storage or transmission.
            In addition to compressing data, you may need to expand or decompress data to its
            original form. The Repose Compression filter can accomplish these tasks for you.
            The Compression filter operates as a wrapper for the PlanetJ CompressingFilter.
        </para>
        <para>
            <note>
                <para>The Compression filter was added in the Repose
                    release version 2.7. Please upgrade to Repose
                    version 2.7 or above to use this filter.
                </para>
            </note>
        </para>
    </section>


    <section xml:id="Compression-Use-Cases">
        <title>Compression Filter Use Cases</title>
        <para></para>
    </section>


    <section xml:id="Compression-Process">
        <title>Compression Filter Process</title>
        <para>Depending on your need, you can configure the Repose
            Compression filter to either compress, decompress, or pass
            the request data that it receives from the client before
            sending it to the origin service. The Compression filter
            then compresses, decompresses, or passes the response data
            that it receives from the origin service before sending it
            back to the client. A typical Compression filter decision
            flow is summarized in the drawing below:
        </para>
        <figure
                xml:id="Compression-Filter-Diagram">
            <title>Request/Response Lifecycle for
                the Compression Filter
            </title>
            <mediaobject>
                <imageobject>
                    <imagedata
                            fileref="../figures/repose-compression-figure.png"
                            format="PNG" align="center"/>
                </imageobject>
            </mediaobject>
        </figure>


        <section xml:id="Supported-Compresions-60">
            <title>Supported Compressions</title>
            <para>Currently, the Repose Compression filter supports these compression schemes.</para>
            <itemizedlist>
                <listitem>
                    <para>gzip</para>
                </listitem>
            </itemizedlist>

            <itemizedlist>
                <listitem>
                    <para>x-gzip</para>
                </listitem>
            </itemizedlist>

            <itemizedlist>
                <listitem>
                    <para>deflate</para>
                </listitem>
            </itemizedlist>

            <itemizedlist>
                <listitem>
                    <para>identity (no compression)</para>
                </listitem>
            </itemizedlist>
        </section>
        <section xml:id="Unsupported-Compresions-70">
            <title>Unsupported Compressions</title>
            <para>Currently, the Repose Compression filter does not support these compression schemes which the
                CompressingFilter supports.
            </para>
            <itemizedlist>
                <listitem>
                    <para>compress</para>
                </listitem>
            </itemizedlist>

            <itemizedlist>
                <listitem>
                    <para>x-compress</para>
                </listitem>
            </itemizedlist>
        </section>
    </section>


    <section xml:id="Compression-Prereqs-30">
        <title>Compression Filter Prerequisites</title>
        <para>The Compression filter has no required incoming headers.
            When ordering the filters, it should be placed before any
            filter that looks at the request body.
        </para>
    </section>

    <section xml:id="Compression-Features">
        <title>Compression Filter Features</title>
        <para>The Compression filter has no required incoming headers.
            When ordering the filters, it should be placed before any
            filter that looks at the request body.
        </para>
    </section>

    <section xml:id="Compression-Configuration">
        <title>Compression Filter Configuration Options</title>
        <!-- Add link to System Model Config -->

        <para>You can configure your service to use the Repose
            Compression filter to compress and decompress request and
            response data. The Compression filter can be added to the
            Repose deployment through the<link
                    xlink:href="https://github.com/rackerlabs/repose/blob/master/repose-aggregator/core/core-lib/src/main/resources/META-INF/schema/examples/system-model.cfg.xml"
                    >System Model Configuration</link>. All of the
            Compression filter configurations fall under the
            <code>&lt;content-compression&gt;</code>element.
        </para>


        <para>
            <guilabel>Elements and Attributes Used in the
                Compression Filter
            </guilabel>
        </para>
        <para>
            <itemizedlist>
                <listitem>
                    <para><guilabel>&lt;content-compression></guilabel>:
                        lists the accompanying sub-elements and
                        attributes to define your configuration.
                    </para>

                    <itemizedlist>
                        <listitem>
                            <para><guilabel>&lt;compression></guilabel>:
                                specifies the compression filter
                                configuration.
                            </para>


                            <itemizedlist>
                                <listitem>
                                    <para><guilabel>compression-threshold</guilabel>:
                                        This attribute sets the size, using
                                        bytes, of the smallest response
                                        that will be compressed. If less
                                        than the amount of bytes specified
                                        in the compressionThreshold
                                        attribute are written to the
                                        response, the request will not be
                                        compressed, and the response will
                                        go to the client unmodified. If it
                                        is set to 0, compression will begin
                                        immediately. The default is number
                                        of bytes is 1024.
                                    </para>
                                </listitem>
                            </itemizedlist>

                            <itemizedlist>
                                <listitem>
                                    <para><guilabel>include-content-types</guilabel>:
                                        This attribute is treated as a
                                        space-separated list of content
                                        types (e.g. text/html,text/xml). It
                                        attempts to compress only the
                                        responses that specify one of these
                                        values as its content type, such as
                                        ServletResponse.setContentType(String).
                                    </para>
                                </listitem>
                            </itemizedlist>

                            <itemizedlist>
                                <listitem>
                                    <para><guilabel>exclude-content-types</guilabel>:
                                        This attribute specifies a list of
                                        content types that should not be
                                        compressed; everything else will be
                                        compressed. Note that any content
                                        type that indicates a compressed
                                        format (e.g. application/gzip,
                                        application/x-compress) will not be
                                        compressed in any event.
                                    </para>
                                </listitem>

                                <listitem>
                                    <para><guilabel>&lt;exclude-user-agent-patterns&gt;</guilabel>:
                                        This attribute will not compress
                                        requests whose User-Agent header
                                        values match one of these patterns.
                                    </para>
                                </listitem>
                            </itemizedlist>

                        </listitem>
                    </itemizedlist>

                </listitem>
            </itemizedlist>
        </para>

        <note>
            <para>This parameter cannot be specified
                if exclude-content-types is
                also configured.
            </para>
        </note>

        <para>
            <guilabel>Your configuration in compression.cfg.xml will
                resemble the following example:
            </guilabel>
        </para>
        <example>
            <title>Sample Compression Configuration File</title>
            <programlisting language="xml">
                <xi:include href="../samples/repose-compression-cfg.txt" parse="text"/>
            </programlisting>
        </example>


        <section xml:id="Configs-not-included"
                >
            <title>Configurations That Are Not Included</title>
            <para>The following configurations of the
                CompressingFilter are not exposed through the Repose
                Configuration.
            </para>
            <itemizedlist>
                <listitem>
                    <para>includePathPatterns/excludePathPatterns - Path matching per
                        filter can be configured through the 'uri-regex' attribute of the filter
                        declaration within the sytem-model.cfg.xml file.
                    </para>
                </listitem>
            </itemizedlist>
        </section>
    </section>


    <section xml:id="Preventing-XXE-Injection">
        <title>Preventing XXE Injection</title>
        <para>The Compression filter can aid with the prevention of
            XXE Injection by decompressing a compressed request body
            before it passes to the Translation filter. One of the
            features of the Translation Filter is to prevent XXE
            Injection through the request body. Normally, the
            Translation filter is sufficient unless the API that
            Repose sits in front of accepts compressed data from their
            users. The Translation filter cannot comprehend compressed
            data so a decompressor is needed to mitigate XXE
            injections through compressed data.
        </para>


        <example>
            <title>Sample system-model.cfg.xml Filter List</title>
            <programlisting language="xml">
                <xi:include href="../samples/repose-compression-xxe-injection-prevention.xml" parse="text"/>
            </programlisting>
        </example>


    </section>

    <section xml:id="Compression-Error-Scenarios">
        <title>Compression Filter Error Scenarios</title>
        <para>
            <itemizedlist>
                <listitem>
                    <para>The Compression filter returns a 400 error
                        response code if the request body is not in
                        the format specified in the Content-Encoding
                        header (ZipException) or if the request body
                        terminates in an unexpected manner
                        (EOFException) while decompressing.
                    </para>
                </listitem>
                <listitem>
                    <para>The Compression filter returns a 500 error
                        response code on any other IOException or
                        ServletException.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>


</section>
